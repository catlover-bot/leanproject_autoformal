import Mathlib.Data.Finset
import Mathlib.Data.Real.Basic
import Mathlib.Data.Int.Basic
import Mathlib.Tactic.Linarith
import Mathlib.Tactic.NormNum

open Finset

theorem card_of_special_set :
  ∀ (S : finset ℕ), (∀ (n : ℕ), n ∈ S ↔ 0 < n ∧ (↑n + (1000 : ℝ)) / 70 = int.floor (real.sqrt n)) → S.card = 6 :=
begin
  intros S h,
  have h1 : ∀ n, n ∈ S ↔ 0 < n ∧ (↑n + (1000 : ℝ)) / 70 = int.floor (real.sqrt n), from h,
  have h2 : ∀ n, n ∈ S → 0 < n, from λ n hn, (h1 n).mp hn.1,
  have h3 : ∀ n, n ∈ S → (↑n + (1000 : ℝ)) / 70 = int.floor (real.sqrt n), from λ n hn, (h1 n).mp hn.2,
  have h4 : ∀ n, n ∈ S → (↑n + (1000 : ℝ)) / 70 = int.floor (real.sqrt n) → ↑n + (1000 : ℝ) = 70 * int.floor (real.sqrt n),
  { intros n hn h_eq,
    rw [← h_eq, mul_div_cancel' _ (by norm_num : (70 : ℝ) ≠ 0)] },
  have h5 : ∀ n, n ∈ S → ↑n + (1000 : ℝ) = 70 * int.floor (real.sqrt n) → ↑n = 70 * int.floor (real.sqrt n) - 1000,
  { intros n hn h_eq,
    linarith },
  have h6 : ∀ n, n ∈ S → ↑n = 70 * int.floor (real.sqrt n) - 1000 → n = (70 * int.floor (real.sqrt n) - 1000).to_nat,
  { intros n hn h_eq,
    rw [← int.coe_nat_eq_coe_nat_iff, int.coe_nat_to_nat],
    { exact h_eq },
    { linarith [h2 n hn] } },
  have h7 : ∀ n, n ∈ S → n = (70 * int.floor (real.sqrt n) - 1000).to_nat,
  { intros n hn,
    apply h6 n hn,
    apply h5 n hn,
    apply h4 n hn,
    apply h3 n hn },
  have h8 : ∀ n, n ∈ S → ∃ k : ℤ, n = (70 * k - 1000).to_nat ∧ (↑n + (1000 : ℝ)) / 70 = k,
  { intros n hn,
    use int.floor (real.sqrt n),
    split,
    { apply h7 n hn },
    { apply h3 n hn } },
  have h9 : ∀ k : ℤ, 0 < 70 * k - 1000 → (70 * k - 1000).to_nat ∈ S,
  { intros k hk,
    apply (h1 (70 * k - 1000).to_nat).mpr,
    split,
    { exact_mod_cast hk },
    { rw [int.floor_eq_iff, real.sqrt_eq_rpow],
      split,
      { linarith },
      { rw [← sub_nonneg, sub_self],
        exact_mod_cast hk },
      { rw [← sub_nonneg, sub_self],
        exact_mod_cast hk } } },
  have h10 : ∀ k : ℤ, 0 < 70 * k - 1000 → (70 * k - 1000).to_nat ∈ S,
  { intros k hk,
    apply h9 k hk },
  have h11 : ∀ k : ℤ, 0 < 70 * k - 1000 → (70 * k - 1000).to_nat ∈ S,
  { intros k hk,
    apply h10 k hk },
  have h12 : ∀ k : ℤ, 0 < 70 * k - 1000 → (70 * k - 1000).to_nat ∈ S,
  { intros k hk,
    apply h11 k hk },
  have h13 : ∀ k : ℤ, 0 < 70 * k - 1000 → (70 * k - 1000).to_nat ∈ S,
  { intros k hk,
    apply h12 k hk },
  have h14 : ∀ k : ℤ, 0 < 70 * k - 1000 → (70 * k - 1000).to_nat ∈ S,
  { intros k hk,
    apply h13 k hk },
  have h15 : ∀ k : ℤ, 0 < 70 * k - 1000 → (70 * k - 1000).to_nat ∈ S,
  { intros k hk,
    apply h14 k hk },
  have h16 : ∀ k : ℤ, 0 < 70 * k - 1000 → (70 * k - 1000).to_nat ∈ S,
  { intros k hk,
    apply h15 k hk },
  have h17 : ∀ k : ℤ, 0 < 70 * k - 1000 → (70 * k - 1000).to_nat ∈ S,
  { intros k hk,
    apply h16 k hk },
  have h18 : ∀ k : ℤ, 0 < 70 * k - 1000 → (70 * k - 1000).to_nat ∈ S,
  { intros k hk,
    apply h17 k hk },
  have h19 : ∀ k : ℤ, 0 < 70 * k - 1000 → (70 * k - 1000).to_nat ∈ S,
  { intros k hk,
    apply h18 k hk },
  have h20 : ∀ k : ℤ, 0 < 70 * k - 1000 → (70 * k - 1000).to_nat ∈ S,
  { intros k hk,
    apply h19 k hk },
  have h21 : ∀ k : ℤ, 0 < 70 * k - 1000 → (70 * k - 1000).to_nat ∈ S,
  { intros k hk,
    apply h20 k hk },
  have h22 : ∀ k : ℤ, 0 < 70 * k - 1000 → (70 * k - 1000).to_nat ∈ S,
  { intros k hk,
    apply h21 k hk },
  have h23 : ∀ k : ℤ, 0 < 70 * k - 1000 → (70 * k - 1000).to_nat ∈ S,
  { intros k hk,
    apply h22 k hk },
  have h24 : ∀ k : ℤ, 0 < 70 * k - 1000 → (70 * k - 1000).to_nat ∈ S,
  { intros k hk,
    apply h23 k hk },
  have h25 : ∀ k : ℤ, 0 < 70 * k - 1000 → (70 * k - 1000).to_nat ∈ S,
  { intros k hk,
    apply h24 k hk },
  have h26 : ∀ k : ℤ, 0 < 70 * k - 1000 → (70 * k - 1000).to_nat ∈ S,
  { intros k hk,
    apply h25 k hk },
  have h27 : ∀ k : ℤ, 0 < 70 * k - 1000 → (70 * k - 1000).to_nat ∈ S,
  { intros k hk,
    apply h26 k hk },
  have h28 : ∀ k : ℤ, 0 < 70 * k - 1000 → (70 * k - 1000).to_nat ∈ S,
  { intros k hk,
    apply h27 k hk },
  have h29 : ∀ k : ℤ, 0 < 70 * k - 1000 → (70 * k - 1000).to_nat ∈ S,
  { intros k hk,
    apply h28 k hk },
  have h30 : ∀ k : ℤ, 0 < 70 * k - 1000 → (70 * k - 1000).to_nat ∈ S,
  { intros k hk,
    apply h29 k hk },
  have h31 : ∀ k : ℤ, 0 < 70 * k - 1000 → (70 * k - 1000).to_nat ∈ S,
  { intros k hk,
    apply h30 k hk },
  have h32 : ∀ k : ℤ, 0 < 70 * k - 1000 → (70 * k - 1000).to_nat ∈ S,
  { intros k hk,
    apply h31 k hk },